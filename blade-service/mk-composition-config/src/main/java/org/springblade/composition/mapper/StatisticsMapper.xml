<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.springblade.composition.mapper.StatisticsMapper">

    <select id="userCompositionCount" resultType="org.springblade.composition.dto.UserComposition">
        select u.id as userId, u.name as userName, c.id as compositionId, c.name as compositionName, count(*) as number, round(avg(s.time)/1000,0) as averageSpeed
        from blade_user u
        left join mk_statistics s on u.id=s.update_user
        left join mk_composition c on s.composition_id=c.id
        left join mk_task_label l on l.id=s.sub_task_id
        where s.status = 2
        <if test="startTime!=null">
            and s.update_time &gt; #{startTime}
        </if>
        <if test="endTime!=null">
            and s.update_time &lt; #{endTime}
        </if>
        <if test="userId!=null">
            and u.id=#{userId}
        </if>
        <if test="taskId!=null">
            and l.task_id=#{taskId}
        </if>
        <if test="type!=null">
            and l.type=#{type}
        </if>

        and s.is_deleted=0
        group by s.update_user,s.composition_id
    </select>

    <select id="userCompositionWrongCount" resultType="org.springblade.composition.dto.UserComposition">
        select u.id as userId, u.name as userName, c.id as compositionId, c.name as compositionName, count(*) as number, round(avg(s.time)/1000,0) as averageSpeed
        from blade_user u
        left join mk_statistics s on u.id=s.update_user
        left join mk_composition c on s.composition_id=c.id
        left join mk_task_label l on l.id=s.sub_task_id
        where s.status = 2
        and s.is_wrong > 0
        <if test="startTime!=null">
            and s.update_time &gt; #{startTime}
        </if>
        <if test="endTime!=null">
            and s.update_time &lt; #{endTime}
        </if>
        <if test="userId!=null">
            and u.id=#{userId}
        </if>
        <if test="taskId!=null">
            and l.task_id=#{taskId}
        </if>
        <if test="type!=null">
            and l.type=#{type}
        </if>

        and s.is_deleted=0
        group by s.update_user,s.composition_id
    </select>

    <select id="taskCompositionCount" resultType="org.springblade.composition.dto.TaskCompositionDTO">
        select t.NAME_ as compositionName,count(*) as number
        from
        <if test="env == 'dev'">
            bladex_flow_dev.ACT_HI_TASKINST t
        </if>
        <if test="env == 'prod'">
            bladex_flow.ACT_HI_TASKINST t
        </if>
        left join
        <if test="env == 'dev'">
            bladex_dev.mk_task_label l
        </if>
        <if test="env == 'prod'">
            bladex.mk_task_label l
        </if>
        on l.process_instance_id=t.PROC_INST_ID_
        where
        <if test="status==1">
            !ISNULL(END_TIME_)
        </if>
        <if test="status==2">
            ISNULL(END_TIME_)
        </if>
        <if test="startTime!=null">
            and t.LAST_UPDATED_TIME_ &gt; #{startTime}
        </if>
        <if test="endTime!=null">
            and t.LAST_UPDATED_TIME_ &lt; #{endTime}
        </if>
        <if test="taskId!=null">
            and l.task_id=#{taskId}
        </if>
        <if test="type!=null">
            and l.type=#{type}
        </if>
        group by NAME_;
    </select>

    <select id="taskCompositionCount2" resultType="org.springblade.composition.dto.TaskCompositionDTO">
        select c.id as compositionId, c.name as compositionName, count(*) as number, round(avg(s.time)/1000,0) as averageSpeed
        from mk_statistics s
        left join mk_composition c on s.composition_id=c.id
        left join mk_task_label l on l.id=s.sub_task_id
        <if test="taskId!=null">
            where l.task_id=#{taskId}
        </if>
        <if test="taskType!=null">
            and l.type=#{taskType}
        </if>
        <if test="statisticsType!=null">
            and s.type=#{statisticsType}
        </if>
        <if test="status==1">
            and s.status = 2
        </if>
        <if test="status==2">
            and s.status = 1
        </if>
        <if test="startTime!=null">
            and s.update_time &gt; #{startTime}
        </if>
        <if test="endTime!=null">
            and s.update_time &lt; #{endTime}
        </if>


        and s.is_deleted=0
        group by s.composition_id
    </select>

    <select id="taskCompositionWrongCount2" resultType="org.springblade.composition.dto.TaskCompositionDTO">
        select c.id as compositionId, c.name as compositionName, count(*) as number, round(avg(s.time)/1000,0) as averageSpeed
        from mk_statistics s
        left join mk_composition c on s.composition_id=c.id
        left join mk_task_label l on l.id=s.sub_task_id
        where s.status = 2
        and s.is_wrong > 0
        <if test="startTime!=null">
            and s.update_time &gt; #{startTime}
        </if>
        <if test="endTime!=null">
            and s.update_time &lt; #{endTime}
        </if>
        <if test="taskId!=null">
            and l.task_id=#{taskId}
        </if>
        <if test="type!=null">
            and l.type=#{type}
        </if>

        and s.is_deleted=0
        group by s.composition_id
    </select>

    <select id="userInspectionCount" resultType="org.springblade.composition.dto.UserInspectionDTO">
        select u.id as userId,u.name as userName,count(*) as number,round(avg(t.time)/1000,0) as averageSpeed from mk_task_quality_inspection t
        left join blade_user u on t.update_user=u.id
        where 1=1
        <if test="userId!=null">
            and t.update_user=#{userId}
        </if>
        <if test="startTime!=null">
            and t.update_time &gt; #{startTime}
        </if>
        <if test="endTime!=null">
            and t.update_time &lt; #{endTime}
        </if>
        group by t.update_user
    </select>

    <select id="getExpertByLabelTaskId" resultType="org.springblade.adata.entity.Expert">
        select e.* from mk_adata_expert e
        inner join mk_task_label t
        on e.id=t.person_id
        where t.id=#{param1}
    </select>

    <select id="tenantCompositionCount" resultType="org.springblade.composition.dto.TenantComposition">
        select t.tenant_id as tenantId, t.tenant_name as tenantName, c.id as compositionId, c.name as compositionName, count(*) as number, round(avg(s.time)/1000,0) as averageSpeed
        from blade_tenant t
        left join mk_statistics s on t.tenant_id=s.tenant_id
        left join mk_composition c on s.composition_id=c.id
        left join mk_task_label l on l.id=s.sub_task_id
        where s.status = 2
        <if test="startTime!=null">
            and s.update_time &gt; #{startTime}
        </if>
        <if test="endTime!=null">
            and s.update_time &lt; #{endTime}
        </if>
        <if test="tenantId!=null">
            and t.id=#{tenantId}
        </if>
        <if test="taskId!=null">
            and l.task_id=#{taskId}
        </if>
        <if test="type!=null">
            and l.type=#{type}
        </if>

        and s.is_deleted=0
        group by t.tenant_id,t.tenant_name,s.composition_id
    </select>

    <select id="tenantCompositionWrongCount" resultType="org.springblade.composition.dto.TenantComposition">
        select t.tenant_id as tenantId, t.tenant_name as tenantName, c.id as compositionId, c.name as compositionName, count(*) as number, round(avg(s.time)/1000,0) as averageSpeed
        from blade_tenant t
        left join mk_statistics s on t.tenant_id=s.tenant_id
        left join mk_composition c on s.composition_id=c.id
        left join mk_task_label l on l.id=s.sub_task_id
        where s.status = 2
        and s.is_wrong > 0
        <if test="startTime!=null">
            and s.update_time &gt; #{startTime}
        </if>
        <if test="endTime!=null">
            and s.update_time &lt; #{endTime}
        </if>
        <if test="tenantId!=null">
            and t.id=#{tenantId}
        </if>
        <if test="taskId!=null">
            and l.task_id=#{taskId}
        </if>
        <if test="type!=null">
            and l.type=#{type}
        </if>

        and s.is_deleted=0
        group by t.tenant_id,t.tenant_name,s.composition_id
    </select>
</mapper>
